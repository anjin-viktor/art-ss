РУКОВОДСТВО
1) Что это?
Эта система предназначена для проведения тестирования программ в условиях неполучения ими ресурсов.

2) Видимые на текущий момент шаги работы
 --- Написание модулей, делайщих возможным перехват функций (осуществляющие перехват функции должны быть способны как отказывать в выделении ресурса, так и выделять его, основываясь на векторе поведения).
 --- Обдумывание и реализация механизма перехвата (либо заранее определить набор перехватываемых функций, либо придумать механизм, позволяющий их генерировать).
 --- Продумывание и реализация мезанизма сигнализирования о неаварийном завершении работы программы.
 --- Реализация программы, позволяющей проводить тесты путем последовательного перебора векторов поведения для обрабатываемых ресурсов. 
 --- Поиск или разработка алгоритма для проведения тестов более оптимально. 

3) Что есть на текущий момент?
На текущий момент завершаю   2-ой этап. 

Имею:
 --- bigbool - структура, предназначенная для работы с булевыми векторами.
 --- resource - структура, предназначенная для описания ресурсов. Содержит в себе имя ресурса и вектор поведения (булев вектор); позволяет проходить по вектору запросами get_action().
 --- manager - структура, хранящая коллекцию ресурсов. К внешней переменной этой структуры обращаются функции перехвата, спрашивая, что им делать. Она инициализируется в начале работы программы.
 --- catch_lib - набор функций для генерации перехватывающих функций по описаний в формате xml

 
Механизм перехвата следующий: перехватываемый функции подменяются другими. Все ресурсы характеризуются именем. Подменяющие функции задают вопрос переменной структуры manager: "что делать? возвращать отказ или ресурс". При этом просматриватеся вектор поведения ресурса, соответсвующего запрошенному имени, возвращается соответствующие значение.

Сейчас пишу create_lib.*. Цель - на входе имеем файла в формате xml. На выходе - файл с функциями, предназначенными для перехвата функций, описанных в этом файле.

4) Формат xml файла
    Описания всех функций находятся внутри тега <functions>
    Описание каждой функции включает указание  её имени (внутри тега <name></name>); типа возвращаемого значения(<type></type>); значения, возвращаемого вслучае ошибки(<error_value></error_value>); и типов параметров в порядке из следования в функции (<parameters> <parameter>type1</parameter> .... </parameters>) (если функция их не имеет - не указываются)
    При неуказании одной из этих частей(кроме параметров) функция считается неверно определённой. 
    Добавил возможность перехвата функций с неопределённым чеслом параметров. Они описываются также; последний параметр - ... . Для этих функций обязателен тег <max_arg_size></max_arg_size>, указывающий максимальный размер аргументов.

    Пример1:
    <?xml version="1.0"?>
    <functions>
	<function>
    	    <name>fopen</name>
    	    <parameters>
        	<parameter>const char *</parameter>
    		<parameter>const char *</parameter>
    	    </parameters>
    	    <type>FILE *</type>
    	    <error_value>NULL</error_value> 
	</function>
    </functions>

    Пример2:

    <function>
        <name>open</name>
        <parameters>
            <parameter>const char *</parameter>
            <parameter>int</parameter>
            <parameter>...</parameter>
        </parameters>
        <type>int</type>
        <error_value>-1</error_value>
        <max_arg_size>64</max_arg_size>
    </function>



5) Как на это посмотреть?
В директории trunk/tests/ содержатся тесты для всех написанных модулей.

Для их компиляции:
make bigbool
make resource
make manager
make create_lib
make catch

Наиболее интересный тест - проба перехвата функций:
В /trunk/tests

make create_lib
./create_lib test.xml (в test.xml описание некоторых функций)
make catch
./catch_test open 0101010 (перехват open в catch_test в соответствии с переданным вектором поведения)
